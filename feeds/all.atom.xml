<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Blog</title><link href="http://chihhunglin.github.io/" rel="alternate"></link><link href="http://chihhunglin.github.io/feeds/all.atom.xml" rel="self"></link><id>http://chihhunglin.github.io/</id><updated>2016-05-06T17:30:00+08:00</updated><entry><title>使用 Packer 建立 Windows VM box</title><link href="http://chihhunglin.github.io/shi-yong-packer-jian-li-windows-vm-box.html" rel="alternate"></link><published>2016-05-06T17:30:00+08:00</published><author><name>Peter Lin</name></author><id>tag:chihhunglin.github.io,2016-05-06:shi-yong-packer-jian-li-windows-vm-box.html</id><summary type="html">&lt;p&gt;學習 &lt;a href="https://www.packer.io/"&gt;Packer&lt;/a&gt; 筆記．(不完整版)&lt;/p&gt;
&lt;h2&gt;安裝&lt;/h2&gt;
&lt;p&gt;參閱官方&lt;a href="https://www.packer.io/docs/installation.html"&gt;文件&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;實作 Windows&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://stefanscherer.github.io/setup-local-windows-2016-tp5-docker-vm/"&gt;Setup a local Windows 2016 TP5 Docker VM&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Run Packer&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Packer version : 0.10.0&lt;/li&gt;
&lt;li&gt;Virtualbox version : 5.0.20&lt;/li&gt;
&lt;li&gt;Vagrant : 1.8.1&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/StefanScherer/packer-windows  
&lt;span class="nb"&gt;cd&lt;/span&gt; packer-windows 

packer build --only&lt;span class="o"&gt;=&lt;/span&gt;virtualbox-iso windows_2016_docker.json  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blogs.technet.microsoft.com/ausoemteam/2016/04/28/windows-server-2016-technical-preview-5-available-for-download/"&gt;key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;參考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/seterrychen/packer-vagrant-vbox"&gt;Using Packer to package Vagrant box(driver: Virtualbox) by Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>從 javascript 看 python</title><link href="http://chihhunglin.github.io/cong-javascript-kan-python.html" rel="alternate"></link><published>2016-05-04T14:30:00+08:00</published><author><name>Peter Lin</name></author><id>tag:chihhunglin.github.io,2016-05-04:cong-javascript-kan-python.html</id><summary type="html">&lt;p&gt;學習 &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; 筆記，紀錄與 javascript 語法特別的地方．(不完整版)&lt;/p&gt;
&lt;h2&gt;The range() Function&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Mary&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;had&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;little&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;lamb&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span class="k"&gt;for&lt;/span&gt; i in range&lt;span class="o"&gt;(&lt;/span&gt;len&lt;span class="o"&gt;(&lt;/span&gt;a&lt;span class="o"&gt;))&lt;/span&gt;:
...     print i, a&lt;span class="o"&gt;[&lt;/span&gt;i&lt;span class="o"&gt;]&lt;/span&gt;
...
&lt;span class="m"&gt;0&lt;/span&gt; Mary
&lt;span class="m"&gt;1&lt;/span&gt; had
&lt;span class="m"&gt;2&lt;/span&gt; a
&lt;span class="m"&gt;3&lt;/span&gt; little
&lt;span class="m"&gt;4&lt;/span&gt; lamb
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;break and continue Statements, and else Clauses on Loops&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="k"&gt;for&lt;/span&gt; n in range&lt;span class="o"&gt;(&lt;/span&gt;2, 10&lt;span class="o"&gt;)&lt;/span&gt;:
...     &lt;span class="k"&gt;for&lt;/span&gt; x in range&lt;span class="o"&gt;(&lt;/span&gt;2, n&lt;span class="o"&gt;)&lt;/span&gt;:
...         &lt;span class="k"&gt;if&lt;/span&gt; n % &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 0:
...             print n, &lt;span class="s1"&gt;&amp;#39;equals&amp;#39;&lt;/span&gt;, x, &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;, n/x
...             &lt;span class="nb"&gt;break&lt;/span&gt;
...     &lt;span class="k"&gt;else&lt;/span&gt;:
...         &lt;span class="c1"&gt;# loop fell through without finding a factor&lt;/span&gt;
...         print n, &lt;span class="s1"&gt;&amp;#39;is a prime number&amp;#39;&lt;/span&gt;
...
&lt;span class="m"&gt;2&lt;/span&gt; is a prime number
&lt;span class="m"&gt;3&lt;/span&gt; is a prime number
&lt;span class="m"&gt;4&lt;/span&gt; equals &lt;span class="m"&gt;2&lt;/span&gt; * 2
&lt;span class="m"&gt;5&lt;/span&gt; is a prime number
&lt;span class="m"&gt;6&lt;/span&gt; equals &lt;span class="m"&gt;2&lt;/span&gt; * 3
&lt;span class="m"&gt;7&lt;/span&gt; is a prime number
&lt;span class="m"&gt;8&lt;/span&gt; equals &lt;span class="m"&gt;2&lt;/span&gt; * 4
&lt;span class="m"&gt;9&lt;/span&gt; equals &lt;span class="m"&gt;3&lt;/span&gt; * 3
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="k"&gt;for&lt;/span&gt; num in range&lt;span class="o"&gt;(&lt;/span&gt;2, 10&lt;span class="o"&gt;)&lt;/span&gt;:
...     &lt;span class="k"&gt;if&lt;/span&gt; num % &lt;span class="nv"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 0:
...         print &lt;span class="s2"&gt;&amp;quot;Found an even number&amp;quot;&lt;/span&gt;, num
...         &lt;span class="k"&gt;continue&lt;/span&gt;
...     print &lt;span class="s2"&gt;&amp;quot;Found a number&amp;quot;&lt;/span&gt;, num
Found an even number 2
Found a number 3
Found an even number 4
Found a number 5
Found an even number 6
Found a number 7
Found an even number 8
Found a number 9
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;pass Statements&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="k"&gt;while&lt;/span&gt; True:
...     pass  &lt;span class="c1"&gt;# Busy-wait for keyboard interrupt (Ctrl+C)&lt;/span&gt;
...
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; class MyEmptyClass:
...     pass
...
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; def initlog&lt;span class="o"&gt;(&lt;/span&gt;*args&lt;span class="o"&gt;)&lt;/span&gt;:
...     pass   &lt;span class="c1"&gt;# Remember to implement this!&lt;/span&gt;
...
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;The default value is evaluated only once.&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def f&lt;span class="o"&gt;(&lt;/span&gt;a, &lt;span class="nv"&gt;L&lt;/span&gt;&lt;span class="o"&gt;=[])&lt;/span&gt;:
    L.append&lt;span class="o"&gt;(&lt;/span&gt;a&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; L

print f&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;
print f&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;
print f&lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def f&lt;span class="o"&gt;(&lt;/span&gt;a, &lt;span class="nv"&gt;L&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;None&lt;span class="o"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;if&lt;/span&gt; L is None:
        &lt;span class="nv"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;
    L.append&lt;span class="o"&gt;(&lt;/span&gt;a&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; L
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Keyword Arguments&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def cheeseshop&lt;span class="o"&gt;(&lt;/span&gt;kind, *arguments, **keywords&lt;span class="o"&gt;)&lt;/span&gt;:
    print &lt;span class="s2"&gt;&amp;quot;-- Do you have any&amp;quot;&lt;/span&gt;, kind, &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;
    print &lt;span class="s2"&gt;&amp;quot;-- I&amp;#39;m sorry, we&amp;#39;re all out of&amp;quot;&lt;/span&gt;, kind
    &lt;span class="k"&gt;for&lt;/span&gt; arg in arguments:
        print arg
    print &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt; * 40
    &lt;span class="nv"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; sorted&lt;span class="o"&gt;(&lt;/span&gt;keywords.keys&lt;span class="o"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; kw in keys:
        print kw, &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;, keywords&lt;span class="o"&gt;[&lt;/span&gt;kw&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Lambda Expressions&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; def make_incrementor&lt;span class="o"&gt;(&lt;/span&gt;n&lt;span class="o"&gt;)&lt;/span&gt;:
...     &lt;span class="k"&gt;return&lt;/span&gt; lambda x: x + n
...
&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; make_incrementor&lt;span class="o"&gt;(&lt;/span&gt;42&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; f&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt;
42
&amp;gt;&amp;gt;&amp;gt; f&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;
43
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>使用 Pelican 創造自己的 Github Pages blog</title><link href="http://chihhunglin.github.io/shi-yong-pelican-chuang-zao-zi-ji-de-github-pages-blog.html" rel="alternate"></link><published>2016-04-25T14:30:00+08:00</published><author><name>Peter Lin</name></author><id>tag:chihhunglin.github.io,2016-04-25:shi-yong-pelican-chuang-zao-zi-ji-de-github-pages-blog.html</id><summary type="html">&lt;p&gt;&lt;a href="http://docs.getpelican.com/en/3.6.3/"&gt;Pelican&lt;/a&gt; 用 python 寫成的靜態網頁產生工具．&lt;/p&gt;
&lt;h1&gt;設定 github.io 網頁&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;建立兩個容器 &lt;ul&gt;
&lt;li&gt;取得 &lt;strong&gt;GitHub&lt;/strong&gt; 帳號&lt;/li&gt;
&lt;li&gt;建立 &lt;strong&gt;repository&lt;/strong&gt; ，命名規則 username.github.io-src and username.github.io(初始化加入README)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;安裝 Pelican&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install pelican markdown
git clone https://github.com/username/username.github.io-src ghpages
&lt;span class="nb"&gt;cd&lt;/span&gt; ghpages
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;使用 Pelican 設定 Blog&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git remote -v
git submodule add https://github.com/username/username.github.io output
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Where do you want to create your new web site? (hit Enter)&lt;/li&gt;
&lt;li&gt;What will be the title of this web site? (ex:Blog)&lt;/li&gt;
&lt;li&gt;Who will be the author of this web site? (ex:Peter)&lt;/li&gt;
&lt;li&gt;What will be the default language of this web site? [en] (hit Enter)&lt;/li&gt;
&lt;li&gt;Do you want to specify a URL prefix? e.g., http://example.com   (Y/n) (Y)&lt;/li&gt;
&lt;li&gt;What is your URL prefix? (see above example; no trailing slash) (http://chihhunglin.github.io)&lt;/li&gt;
&lt;li&gt;Do you want to enable article pagination? (Y/n) (n)&lt;/li&gt;
&lt;li&gt;What is your time zone? [Europe/Paris] (Asia/Taipei)&lt;/li&gt;
&lt;li&gt;Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) (Y)&lt;/li&gt;
&lt;li&gt;Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n) (Y)&lt;/li&gt;
&lt;li&gt;Upload mechanisms: choose No for all except Github Pages&lt;/li&gt;
&lt;li&gt;Is this your personal page (username.github.io)? (y/N) (Y)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Open the publishconf.py file and set the DELETE_OUTPUT_DIRECTORY variable to False.&lt;/p&gt;
&lt;p&gt;Error: [Errno 17] File exists: '/Users/hung/Github/ghpages/output' (這個錯誤不用理）&lt;/p&gt;
&lt;h1&gt;Init, update submodule (非必要)&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git submodule init
git submodule update
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Build, commit, push, 完成!&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make html &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make serve
make publish

&lt;span class="nb"&gt;cd&lt;/span&gt; output
git add .
git commit -m &lt;span class="s2"&gt;&amp;quot;First commit.&amp;quot;&lt;/span&gt;
git push -u origin master
&lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.pyc&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; .gitignore &lt;span class="c1"&gt;#don&amp;#39;t need pyc files&lt;/span&gt;
git add .
git commit -m &lt;span class="s2"&gt;&amp;quot;First commit.&amp;quot;&lt;/span&gt;
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;參考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pages.github.com/"&gt;GiHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fedoramagazine.org/make-github-pages-blog-with-pelican/"&gt;Make a Github Pages blog with Pelican&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Vagrant + Ansible</title><link href="http://chihhunglin.github.io/vagrant-ansible.html" rel="alternate"></link><published>2015-01-27T17:30:00+08:00</published><author><name>Peter Lin</name></author><id>tag:chihhunglin.github.io,2015-01-27:vagrant-ansible.html</id><summary type="html">&lt;h1&gt;Vagrant&lt;/h1&gt;
&lt;h2&gt;&lt;a href="http://www.codedata.com.tw/social-coding/vagrant-tutorial-2-playing-vm-with-vagrant/"&gt;虛擬機&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir demo-1
cd demo-1
vagrant init ubuntu/trusty64
vagrant up
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;登入Ubuntu&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vagrant ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;登出&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vagrant$  exit
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;關機&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vagrant halt
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Ansible&lt;/h1&gt;
&lt;h2&gt;安裝&lt;a href="http://docs.ansible.com/intro_installation.html#latest-releases-via-apt-ubuntu"&gt;Ansible&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install software-properties-common
$ sudo apt-add-repository ppa:ansible/ansible
$ sudo apt-get update
$ sudo apt-get install ansible
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置&lt;a href="http://askubuntu.com/questions/46424/adding-ssh-keys-to-authorized-keys"&gt;authorized_keys&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;產生key&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh-keygen -t rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;配置遠端public key&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat ~/.ssh/id_rsa.pub &lt;span class="p"&gt;|&lt;/span&gt; ssh USER@HOST &lt;span class="s2"&gt;&amp;quot;mkdir -p ~/.ssh &amp;amp;&amp;amp; cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="http://www.lemonlatte.tw/tags/Ansible"&gt;基礎用法&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;編輯inventory file&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;hosts  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[test]          
127.0.0.1
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;ping module&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ansible -m ping -i hosts -u vagrant &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="http://www.codedata.com.tw/social-coding/ansible-github/"&gt;利用 Ansible 部署 GitHub 專案的設定細節&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;clone 範例&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/William-Yeh/ansible-git-deploy-demo.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;下載 roles&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; ansible-git-deploy-demo/public-repo
$ ansible-galaxy install -f  -r requirements.yml
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;執行劇本&lt;/h3&gt;
&lt;h4&gt;編輯hosts&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ansible-playbook -i hosts -u vagrant playbook.yml
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;確認安裝成功&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wrk --help
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Remote Debugging Python with Eclipse and PyDev</title><link href="http://chihhunglin.github.io/remote-debugging-python-with-eclipse-and-pydev.html" rel="alternate"></link><published>2014-12-27T14:30:00+08:00</published><author><name>Peter Lin</name></author><id>tag:chihhunglin.github.io,2014-12-27:remote-debugging-python-with-eclipse-and-pydev.html</id><summary type="html">&lt;p&gt;原文請參閱&lt;a href="http://brianfisher.name/content/remote-debugging-python-eclipse-and-pydev"&gt;Blog&lt;/a&gt;，本文新增自己的實作過程。
環境介紹&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Local : Win8 + eclipse + PyDev&lt;/p&gt;
&lt;p&gt;Remote : ubuntu + python2.7 in virtualbox&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安裝&lt;a href="https://eclipse.org/"&gt;eclipse&lt;/a&gt;
請先安裝&lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html"&gt;Java&lt;/a&gt;，我安裝的是Java 8 跟 eclipse jee luna。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安裝&lt;a href="http://pydev.org/manual_101_install.html"&gt;PyDev&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立PyDev專案，設定python interpreter(注意要跟遠端執行的同一個minor版本)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安裝&lt;a href="https://www.python.org/downloads/"&gt;python interpreter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在Eclipse 設定 python interpreter，參考 &lt;a href="http://kodi.wiki/view/HOW-TO:Debug_Python_Scripts_with_Eclipse"&gt;2.3.1 Add Python Interpreter Path &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立專案 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;File -&amp;gt; New -&amp;gt; PyDev Project
      &amp;gt; [PyDev Project]dialog
      &amp;gt; Project name: 自己打一個
      &amp;gt; Project contents: 程式放置目錄
      &amp;gt; Interpreter: 選剛才設定Python27
      &amp;gt; Finish&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;複製pydev到遠端機器&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find /Applications/eclipse/plugins -name &lt;span class="s1"&gt;&amp;#39;org.python.pydev_*&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;e.g. /Applications/eclipse/plugins/org.python.pydev_2.8.2.2013090511&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    將檔案放置到正確路徑
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python -c &lt;span class="s2"&gt;&amp;quot;import sys&lt;/span&gt;
&lt;span class="s2"&gt;from pprint import pprint as pp&lt;/span&gt;
&lt;span class="s2"&gt;pp(sys.path)&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;e.g. /usr/local/lib/python2.7/dist-packages&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh vagrant@example.dev mkdir pysrc
scp -r /Applications/eclipse/plugins/org.python.pydev_2.8.2.2013090511/pysrc/* vagrant@example.dev:pysrc
ssh vagrant@example.dev &lt;span class="s1"&gt;&amp;#39;sudo cp -R pysrc/* /usr/local/lib/python2.7/dist-packages/&amp;#39;&lt;/span&gt;
ssh vagrant@example.dev rm -r pysrc
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;設定路徑對照
在 ubuntu 編輯 /usr/local/lib/python2.7/dist-packages/pydevd_file_utils.py&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;PATHS_FROM_ECLIPSE_TO_PYTHON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;(&lt;/span&gt;r&lt;span class="s1"&gt;&amp;#39;C:\Gitlab\xxx\rrr&amp;#39;&lt;/span&gt;, r&lt;span class="s1"&gt;&amp;#39;/home/vagrant/xxx/rrr&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;注意大小寫&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新增程式
當 py 執行到 settrace 會中斷去連結到 eclipse 的 debug server。 譬如寫在 run.py。
在 ubuntu 執行 &lt;strong&gt;netstat -rn&lt;/strong&gt; 可以知道 default gw 就是 Host(eclipse) 的IP。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# append path&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;/usr/local/lib/python2.7/dist-packages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pydevd&lt;/span&gt;
&lt;span class="c1"&gt;# breakpoint&lt;/span&gt;
&lt;span class="n"&gt;pydevd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settrace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;10.0.2.2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5678&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdoutToServer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderrToServer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;啟動 eclipse debug server
see &lt;a href="http://brianfisher.name/content/remote-debugging-python-eclipse-and-pydev"&gt;PyDev | Remote Debugger&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;執行python
grunt serve&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;重要&lt;/h1&gt;
&lt;p&gt;兩邊的程式碼一定要一樣，斷點才會有效果。&lt;/p&gt;</summary></entry><entry><title>如何擁有自己的 GitHub 網站</title><link href="http://chihhunglin.github.io/ru-he-yong-you-zi-ji-de-github-wang-zhan.html" rel="alternate"></link><published>2014-12-09T10:21:00+08:00</published><author><name>Peter Lin</name></author><id>tag:chihhunglin.github.io,2014-12-09:ru-he-yong-you-zi-ji-de-github-wang-zhan.html</id><summary type="html">&lt;h1&gt;步驟&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;建立容器 &lt;ul&gt;
&lt;li&gt;取得&lt;strong&gt;GitHub&lt;/strong&gt;帳號&lt;/li&gt;
&lt;li&gt;建立&lt;strong&gt;repository&lt;/strong&gt;，命名規則 username.github.io&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;複製容器&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/username/username.github.io
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;世界您好&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; username.github.io
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt; &amp;gt; index.html
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;上傳&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add --all
git commit -m &lt;span class="s2"&gt;&amp;quot;Initial commit&amp;quot;&lt;/span&gt;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;記得輸入帳號密碼&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;參考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pages.github.com/"&gt;GiHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry></feed>