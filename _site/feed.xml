<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-04-24T16:30:42+08:00</updated><id>http://localhost:4000/</id><title type="html">ThreeD</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Learning Robot Framework</title><link href="http://localhost:4000/python/selenium/robot/2018/04/24/robot.html" rel="alternate" type="text/html" title="Learning Robot Framework" /><published>2018-04-24T12:03:06+08:00</published><updated>2018-04-24T12:03:06+08:00</updated><id>http://localhost:4000/python/selenium/robot/2018/04/24/robot</id><content type="html" xml:base="http://localhost:4000/python/selenium/robot/2018/04/24/robot.html">&lt;p&gt;學習 &lt;a href=&quot;http://blog.castman.net/programming/2016/07/28/robotframework.html&quot;&gt;Robot Framework&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">學習 Robot Framework</summary></entry><entry><title type="html">Learning Javascript</title><link href="http://localhost:4000/javascript/2018/03/15/learning-javascript.html" rel="alternate" type="text/html" title="Learning Javascript" /><published>2018-03-15T12:03:06+08:00</published><updated>2018-03-15T12:03:06+08:00</updated><id>http://localhost:4000/javascript/2018/03/15/learning-javascript</id><content type="html" xml:base="http://localhost:4000/javascript/2018/03/15/learning-javascript.html">&lt;p&gt;偶而就複習一下 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript&quot;&gt;A re-introduction to JavaScript&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">偶而就複習一下 A re-introduction to JavaScript</summary></entry><entry><title type="html">How to hook ReactJs to your existing AngularJS 1.X app [筆記]</title><link href="http://localhost:4000/angularjs/reactjs/2018/03/05/hook-reactjs-to-angularjs1.html" rel="alternate" type="text/html" title="How to hook ReactJs to your existing AngularJS 1.X app [筆記]" /><published>2018-03-05T12:03:06+08:00</published><updated>2018-03-05T12:03:06+08:00</updated><id>http://localhost:4000/angularjs/reactjs/2018/03/05/hook-reactjs-to-angularjs1</id><content type="html" xml:base="http://localhost:4000/angularjs/reactjs/2018/03/05/hook-reactjs-to-angularjs1.html">&lt;p&gt;&lt;a href=&quot;https://codeburst.io/how-to-hook-reactjs-to-your-existing-angularjs-1-x-app-5ab1ac59c0c1&quot;&gt;原文出處&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;此篇文章有很好的範例，並且解釋了AngularJS 跟 React 的不同：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Angular puts JS into HTML while React puts HTML into JS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;總結:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;創建一個 directive 包裹 React app&lt;/li&gt;
  &lt;li&gt;通過隔離的 scope 從 parent 輸入 data 到 directive&lt;/li&gt;
  &lt;li&gt;利用 &lt;code class=&quot;highlighter-rouge&quot;&gt;scope.$watch()&lt;/code&gt; 擷取更新的值，並且實作在 &lt;code class=&quot;highlighter-rouge&quot;&gt;link()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;數入值給 react app 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">原文出處</summary></entry><entry><title type="html">initial css</title><link href="http://localhost:4000/css/html/2018/02/12/initial-css.html" rel="alternate" type="text/html" title="initial css" /><published>2018-02-12T12:03:06+08:00</published><updated>2018-02-12T12:03:06+08:00</updated><id>http://localhost:4000/css/html/2018/02/12/initial-css</id><content type="html" xml:base="http://localhost:4000/css/html/2018/02/12/initial-css.html">&lt;p&gt;&lt;a href=&quot;http://necolas.github.io/normalize.css/&quot;&gt;Normalize.css&lt;/a&gt; 大部分css框架，包含bootstrap都會拿來重設元件．&lt;/p&gt;

&lt;p&gt;除此之外還會有一些初始化html會遇到的問題，紀錄一下&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6654958/make-body-have-100-of-the-browser-height&quot;&gt;Make body have 100% of the browser height&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Normalize.css 大部分css框架，包含bootstrap都會拿來重設元件．</summary></entry><entry><title type="html">d3 LineChart for Network</title><link href="http://localhost:4000/d3/2018/01/25/d3-LineChartNetwork.html" rel="alternate" type="text/html" title="d3 LineChart for Network" /><published>2018-01-25T12:03:06+08:00</published><updated>2018-01-25T12:03:06+08:00</updated><id>http://localhost:4000/d3/2018/01/25/d3-LineChartNetwork</id><content type="html" xml:base="http://localhost:4000/d3/2018/01/25/d3-LineChartNetwork.html">&lt;p&gt;Demo:&lt;/p&gt;

&lt;html&gt;
  &lt;body&gt;
    &lt;style&gt;
      .gridX {
        fill: black;
      }
      .gridX line {
        stroke: #555555;
        stroke-opacity: 0.7;
        shape-rendering: crispEdges;
      }
      .grid line {
        stroke: #555555;
        stroke-opacity: 0.7;
        shape-rendering: crispEdges;
      }
      .grid path {
        stroke-width: 0;
      }
      .areaRx {
        fill: #8b0e0e;
      }
      .areaTx {
        fill: #0e6289;
      }
    &lt;/style&gt;
    &lt;script src=&quot;https://d3js.org/d3.v4.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
      function autorun() {
        var dataRx =
          [
            {
              &quot;time&quot;: 0,
              &quot;close&quot;: 158.13
            },
            {
              &quot;time&quot;: 1,
              &quot;close&quot;: 2053.98
            },
            {
              &quot;time&quot;: 2,
              &quot;close&quot;: 1167
            },
            {
              &quot;time&quot;: 3,
              &quot;close&quot;: 1189.7
            },
            {
              &quot;time&quot;: 4,
              &quot;close&quot;: 199
            }
          ];
        var dataTx =
          [
            {
              &quot;time&quot;: 0,
              &quot;close&quot;: 1158.13
            },
            {
              &quot;time&quot;: 1,
              &quot;close&quot;: 153.98
            },
            {
              &quot;time&quot;: 2,
              &quot;close&quot;: 1067
            },
            {
              &quot;time&quot;: 3,
              &quot;close&quot;: 2289.7
            },
            {
              &quot;time&quot;: 4,
              &quot;close&quot;: 99
            }
          ];

        var svg = d3.select(&quot;.post-content&quot;).append(&quot;svg&quot;),
          margin = {top: 20, right: 40, bottom: 30, left: 50},
          width = 290 - margin.left - margin.right,
          height = 210 - margin.top - margin.bottom,
          g = svg.attr(&quot;width&quot;, width + margin.left + margin.right)
            .attr(&quot;height&quot;, height + margin.top + margin.bottom)
            .append(&quot;g&quot;)
            .attr(&quot;transform&quot;, &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;);

        var x = d3.scaleLinear()
          .range([width, 0]);

        var y = d3.scaleLinear()
          .range([height, 0]);

        var area = d3.area()
          .curve(d3.curveCatmullRom.alpha(0.5))
          .x(function(d) { return x(d.time); })
          .y0(height)
          .y1(function(d) { return y(d.close); });

        var valueline = d3.line()
          .curve(d3.curveCatmullRom.alpha(0.5))
          .x(function(d) { return x(d.time); })
          .y(function(d) { return y(d.close); });

        // gridlines in x axis function
        function make_x_gridlines() {
          return d3.axisBottom(x)
        }

        // gridlines in y axis function
        function make_y_gridlines() {
          return d3.axisLeft(y)
        }

        dataRx.forEach(function(d) {
          d.time = +d.time;
          d.close = +d.close;
        });

        x.domain([0, 5]);
        y.domain([0, 4000]);

        // add the X gridlines
        g.append(&quot;g&quot;)
          .attr(&quot;class&quot;, &quot;gridX&quot;)
          .attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
          .call(make_x_gridlines()
            .tickValues([0,1,2,3,4,5])
            .tickSize(-height)
            .tickFormat(&quot;&quot;)
          )

        // add the Y gridlines
        g.append(&quot;g&quot;)
          .attr(&quot;class&quot;, &quot;grid&quot;)
          .call(make_y_gridlines()
            .tickValues([0,1000,2000,3000,4000])
            .tickSize(-width)
            .tickFormat(&quot;&quot;)
          )

        // add the area rx
        g.append(&quot;path&quot;)
          .data([dataRx])
          .attr(&quot;class&quot;, &quot;areaRx&quot;)
          .attr(&quot;d&quot;, area);

        g.append(&quot;path&quot;)
          .data([dataRx])
          .attr(&quot;class&quot;, &quot;lineRx&quot;)
          .attr(&quot;fill&quot;, &quot;none&quot;)
          .attr(&quot;stroke&quot;, &quot;#ff2a2a&quot;)
          .attr(&quot;stroke-linejoin&quot;, &quot;round&quot;)
          .attr(&quot;stroke-linecap&quot;, &quot;round&quot;)
          .attr(&quot;stroke-width&quot;, 1.5)
          .attr(&quot;d&quot;, valueline);

        // add the area tx
        g.append(&quot;path&quot;)
          .data([dataTx])
          .attr(&quot;class&quot;, &quot;areaTx&quot;)
          .attr(&quot;d&quot;, area);

        g.append(&quot;path&quot;)
          .data([dataTx])
          .attr(&quot;class&quot;, &quot;lineTx&quot;)
          .attr(&quot;fill&quot;, &quot;none&quot;)
          .attr(&quot;stroke&quot;, &quot;#2bbafb&quot;)
          .attr(&quot;stroke-linejoin&quot;, &quot;round&quot;)
          .attr(&quot;stroke-linecap&quot;, &quot;round&quot;)
          .attr(&quot;stroke-width&quot;, 1.5)
          .attr(&quot;d&quot;, valueline);

        g.append(&quot;g&quot;)
          .attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
          .call(d3.axisBottom(x)
            .ticks(5)
            .tickFormat(function(d){
              if (d == 0) {
                return d+' Mins';
              } else {
                return d;
              }
            })
          );

        g.append(&quot;g&quot;)
          .call(d3.axisLeft(y)
            .tickValues([0,1000,2000,3000,4000])
            .tickFormat(function(d){
              if (d == 0) {
                return d+'KB/s';
              } else {
                return d/1000+'KB';
              }
            })
            //.ticks(4)
          );

    }
    if (window.addEventListener) window.addEventListener(&quot;load&quot;, autorun, false);
    else if (window.attachEvent) window.attachEvent(&quot;onload&quot;, autorun);
    else window.onload = autorun;
  &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</content><author><name></name></author><summary type="html">Demo:</summary></entry><entry><title type="html">d3 Selections</title><link href="http://localhost:4000/d3/2018/01/24/d3-Selections.html" rel="alternate" type="text/html" title="d3 Selections" /><published>2018-01-24T12:03:06+08:00</published><updated>2018-01-24T12:03:06+08:00</updated><id>http://localhost:4000/d3/2018/01/24/d3-Selections</id><content type="html" xml:base="http://localhost:4000/d3/2018/01/24/d3-Selections.html">&lt;p&gt;Demo:&lt;/p&gt;

&lt;html&gt;
  &lt;body&gt;
  &lt;script src=&quot;https://d3js.org/d3.v4.js&quot;&gt;&lt;/script&gt;
  &lt;script type=&quot;text/javascript&quot;&gt;
    function autorun()
    {
      var matrix = [
        [11975,  5871, 8916, 2868],
        [ 1951, 10048, 2060, 6171],
        [ 8010, 16145, 8090, 8045],
        [ 1013,   990,  940, 6907]
      ];

      var tr = d3.select(&quot;.post-content&quot;)
        .append(&quot;table&quot;)
        .selectAll(&quot;tr&quot;)
        .data(matrix)
        .enter().append(&quot;tr&quot;);

      var td = tr.selectAll(&quot;td&quot;)
        .data(function(d) { return d; })
        .enter().append(&quot;td&quot;)
        .text(function(d) { return d; })
        .style(
          'color',function(d) {
            if(d&lt;10000){
              return 'red'
            }
          }
        );
    }
    if (window.addEventListener) window.addEventListener(&quot;load&quot;, autorun, false);
    else if (window.attachEvent) window.attachEvent(&quot;onload&quot;, autorun);
    else window.onload = autorun;
  &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</content><author><name></name></author><summary type="html">Demo:</summary></entry><entry><title type="html">macvim youcompleteme on mac</title><link href="http://localhost:4000/python/dlib/2018/01/05/macvim-youcompleteme-on-mac.html" rel="alternate" type="text/html" title="macvim youcompleteme on mac" /><published>2018-01-05T16:03:06+08:00</published><updated>2018-01-05T16:03:06+08:00</updated><id>http://localhost:4000/python/dlib/2018/01/05/macvim-youcompleteme-on-mac</id><content type="html" xml:base="http://localhost:4000/python/dlib/2018/01/05/macvim-youcompleteme-on-mac.html">&lt;p&gt;非可執行之紀錄．&lt;/p&gt;

&lt;p&gt;環境:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Mac      : macOS High Sierra Version 10.13.2
Homebrew : 1.4.2
gcc      : Apple LLVM version 9.0.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;clang-900.0.39.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Boost    : 1.66.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Clone:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git clone YouCompleteMe
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;bundle/YouCompleteMe
git submodule update &lt;span class=&quot;nt&quot;&gt;--init&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--recursive&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;macvim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;brew install macvim &lt;span class=&quot;nt&quot;&gt;--with-override-system-vim&lt;/span&gt;
brew link macvim

brew remove macvim
brew cleanup&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;vim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;vim &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
:python3 print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ycm_state._server_popen.stderr.read&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
:messages&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;記錄除錯過程，非常混亂．
Xcode:
Xcode from app store 要登入認證才能使用&lt;/p&gt;

&lt;p&gt;xcode-select -p
sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
sudo xcodebuild -license accept&lt;/p&gt;

&lt;p&gt;重新編譯:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;xz &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; clang+llvm-5.0.1-x86_64-apple-darwin.tar.xz
&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;xf clang+llvm-5.0.1-x86_64-apple-darwin.tar
mv clang+llvm-5.0.1-final-x86_64-apple-darwin ycm_temp
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ycm_temp
mkdir llvm_root_dir
mv bin include lib libexec share llvm_root_dir
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../ycm_build
make &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Unix Makefiles&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DPATH_TO_LLVM_ROOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/ycm_temp/llvm_root_dir
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp
cmake &lt;span class=&quot;nt&quot;&gt;--build&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt; ycm_core &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt; Release&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">非可執行之紀錄．</summary></entry><entry><title type="html">install dlib on mac</title><link href="http://localhost:4000/python/dlib/2018/01/01/install-dlib-on-mac.html" rel="alternate" type="text/html" title="install dlib on mac" /><published>2018-01-01T16:03:06+08:00</published><updated>2018-01-01T16:03:06+08:00</updated><id>http://localhost:4000/python/dlib/2018/01/01/install-dlib-on-mac</id><content type="html" xml:base="http://localhost:4000/python/dlib/2018/01/01/install-dlib-on-mac.html">&lt;p&gt;環境:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Mac: macOS High Sierra Version 10.13.2
Homebrew: 1.4.2
pyenv: 1.1.5
gcc: Apple LLVM version 9.0.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;clang-900.0.39.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Boost: 1.66.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Step:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install boost
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pyenv global 3.5.4 2.7.14
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pyenv rehash
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pyenv versions
system
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 2.7.14 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /Users/peter/.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 3.5.4 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /Users/peter/.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install boost-python &lt;span class=&quot;nt&quot;&gt;--with-python3&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pyenv activate venv
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install dlib&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果缺少shared lib
請再次安裝python&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;PYTHON_CONFIGURE_OPTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--with-dtrace --enable-shared&quot;&lt;/span&gt; pyenv install 3.5.4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">環境: Mac: macOS High Sierra Version 10.13.2 Homebrew: 1.4.2 pyenv: 1.1.5 gcc: Apple LLVM version 9.0.0 (clang-900.0.39.2) Boost: 1.66.0</summary></entry><entry><title type="html">install jupyterhub from docker</title><link href="http://localhost:4000/tensorflow/python/jupyter/jupyterhub/2017/12/24/install-jupyterhub-from-docker.html" rel="alternate" type="text/html" title="install jupyterhub from docker" /><published>2017-12-24T16:03:06+08:00</published><updated>2017-12-24T16:03:06+08:00</updated><id>http://localhost:4000/tensorflow/python/jupyter/jupyterhub/2017/12/24/install-jupyterhub-from-docker</id><content type="html" xml:base="http://localhost:4000/tensorflow/python/jupyter/jupyterhub/2017/12/24/install-jupyterhub-from-docker.html">&lt;p&gt;Run:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;docker run &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8000:8000 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; jupyterhub jupyterhub/jupyterhub:0.8.1
jupyterhub&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Go to container[jupyterhub]:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; jupyterhub bash&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Setting:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;useradd &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /home/admin admin
passwd admin
pip install notebook&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">Run: docker run -p 8000:8000 -d --name jupyterhub jupyterhub/jupyterhub:0.8.1 jupyterhub</summary></entry><entry><title type="html">darkflow in macOS</title><link href="http://localhost:4000/tensorflow/darknet/deep-learning/object-detection/machine-learning/2017/11/22/machine-learning-yolo.html" rel="alternate" type="text/html" title="darkflow in macOS" /><published>2017-11-22T16:03:06+08:00</published><updated>2017-11-22T16:03:06+08:00</updated><id>http://localhost:4000/tensorflow/darknet/deep-learning/object-detection/machine-learning/2017/11/22/machine-learning-yolo</id><content type="html" xml:base="http://localhost:4000/tensorflow/darknet/deep-learning/object-detection/machine-learning/2017/11/22/machine-learning-yolo.html">&lt;p&gt;&lt;a href=&quot;https://pjreddie.com/darknet/yolo/&quot;&gt;YOLO: Real-Time Object Detection&lt;/a&gt;
目標是想要可以在macOS上用camera跑demo(沒有nvidia
GPU)，於是找到&lt;a href=&quot;https://github.com/thtrieu/darkflow&quot;&gt;darkflow&lt;/a&gt;，記錄實作過程如下：&lt;/p&gt;

&lt;p&gt;環境需求：Python3, tensorflow 1.0, numpy, opencv 3.&lt;/p&gt;

&lt;p&gt;Python使用pyenv安裝，用3.6.x會失敗．
virtualenv用pyenv virtualenv．&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;pyenv install 3.5.4
pyenv shell 3.5.4
pyenv virtualenv venv
pyenv activate venv&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;pip install Cython
pip install numpy
pip install opencv-python
pip install &lt;span class=&quot;nt&quot;&gt;--upgrade&lt;/span&gt; tensorflow
pip list
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
Cython &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.27.3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
numpy &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.13.3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
opencv-python &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.3.0.10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
tensorflow &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.4.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;之後的安裝步驟照著darkflow readme，&lt;a href=&quot;https://github.com/thtrieu/darkflow#getting-started&quot;&gt;getting-started&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git clone https://github.com/thtrieu/darkflow.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;darkflow
pip install &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;flow &lt;span class=&quot;nt&quot;&gt;--h&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
Example usage: flow &lt;span class=&quot;nt&quot;&gt;--imgdir&lt;/span&gt; sample_img/ &lt;span class=&quot;nt&quot;&gt;--model&lt;/span&gt; cfg/yolo.cfg &lt;span class=&quot;nt&quot;&gt;--load&lt;/span&gt; bin/yolo.weights&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;下載weights，從yolo&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;wget https://pjreddie.com/media/files/yolo.weights
mv yolo.weights bin/.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;可以開始使用，輸出的video會放在同個目錄下。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;flow &lt;span class=&quot;nt&quot;&gt;--model&lt;/span&gt; cfg/yolo.cfg &lt;span class=&quot;nt&quot;&gt;--load&lt;/span&gt; bin/yolo.weights &lt;span class=&quot;nt&quot;&gt;--demo&lt;/span&gt; camera &lt;span class=&quot;nt&quot;&gt;--saveVideo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">YOLO: Real-Time Object Detection 目標是想要可以在macOS上用camera跑demo(沒有nvidia GPU)，於是找到darkflow，記錄實作過程如下：</summary></entry></feed>